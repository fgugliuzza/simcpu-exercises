MOLT2: LDWI R2 0000
       LDWI R3 0000
       LDWI R0 0020
MOLT2_LOOP: LDWI R1 0001
            AND R5 R1
            JMPZ MOLT2_SHIFT
            ADD R6 R3
            JMPC MOLT2_CARRY
            JMP MOLT2_SHIFT
MOLT2_CARRY: LDWI R2 0001
MOLT2_SHIFT: RSH R5
             LDWI R1 0001
             AND R4 R1
             JMPZ MOLT2_SHIFT_2
             LDWI R1 8000
             OR R1 R5
MOLT2_SHIFT_2: RSH R4
               LDWI R1 0001
               AND R3 R1
               JMPZ MOLT2_SHIFT_CARRY
               LDWI R1 8000
               OR R1 R4
MOLT2_SHIFT_CARRY: RSH R3
                   MV R2 R2 ; Se R2 e' zero, MV setta il flag Z
                   JMPZ MOLT2_LOOP_END
                   LDWI R1 8000
                   OR R1 R3
                   LDWI R2 0000
MOLT2_LOOP_END: DEC R0
                JMPNZ MOLT2_LOOP
                RET

START: LDWI R8 0f000 ; Fix per un bug dell'assembler
       SPWR R8 ; Inizializzo lo stack pointer
       LDWI R4 1234 ; MSB moltiplicatore
       LDWI R5 5678 ; LSB moltiplicatore
       LDWI R6 1234 ; moltiplicando
       CALL MOLT2
       HLT
